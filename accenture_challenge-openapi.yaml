openapi: "3.0.3"
info:
  title: "accenture_challenge API"
  description: "accenture_challenge API"
  version: "1.0.0"
servers:
  - url: "https://accenture_challenge"
paths:
  /photos:
    post:
      summary: "POST photos"
      operationId: "create"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /photos/{id}:
    get:
      summary: "GET photos/{id}"
      operationId: "getById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
    put:
      summary: "PUT photos/{id}"
      operationId: "update"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /user:
    get:
      summary: "GET user"
      operationId: "getAll"
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "0"
        - name: "order"
          in: "query"
          required: false
          schema:
            type: "string"
            default: "asc"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /user/auth/login:
    post:
      summary: "POST user/auth/login"
      operationId: "login"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /user/{albumId}/{permission}:
    get:
      summary: "GET user/{albumId}/{permission}"
      operationId: "getUsersByalbumId"
      parameters:
        - name: "albumId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "permission"
          in: "path"
          required: true
          schema:
            type: "object"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /user/{id}/albums:
    get:
      summary: "GET user/{id}/albums"
      operationId: "getAlbumsByUserId"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /user/{id}/photos:
    get:
      summary: "GET user/{id}/photos"
      operationId: "getPhotosByUserId"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /albums:
    get:
      summary: "GET albums"
      operationId: "getAll"
      parameters:
        - name: "page"
          in: "query"
          required: false
          schema:
            type: "integer"
            format: "int32"
            default: "0"
        - name: "order"
          in: "query"
          required: false
          schema:
            type: "string"
            default: "asc"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
    post:
      summary: "POST albums"
      operationId: "create"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /albums/{id}:
    get:
      summary: "GET albums/{id}"
      operationId: "getById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
    put:
      summary: "PUT albums/{id}"
      operationId: "update"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /albums/{id}/changePermissions:
    put:
      summary: "PUT albums/{id}/changePermissions"
      operationId: "changePermissions"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /albums/{id}/share:
    post:
      summary: "POST albums/{id}/share"
      operationId: "shareAlbum"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /comments:
    get:
      summary: "GET comments"
      operationId: "getAll"
      parameters:
        - name: "name"
          in: "query"
          required: false
          schema:
            type: "string"
            default: ""
        - name: "user"
          in: "query"
          required: false
          schema:
            type: "string"
            default: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"